spring.application.name=user-service

server.port=8081

eureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}

eureka.instance.prefer-ip-address=true

eureka.client.service-url.defaultZone=http://127.0.0.1:8761/eureka/


eureka.client.healthcheck.enabled=true

# 续约更新时间间隔（默认30秒）
eureka.instance.lease-renewal-interval-in-seconds=30

# 续约到期时间（默认90秒）
eureka.instance.lease-expiration-duration-in-seconds=90


# 同一台实例最大重试次数，不包括首次
ribbon.MaxAutoRetries=1

# 其他实例最大重试次数,不包括首次
ribbon.MaxAutoRetriesNextServer=1

# 当OkToRetryOnAllOperations设置为false时，
# 只会对get请求进行重试。
# 如果设置为true，便会对所有的请求进行重试，
# 如果是put或post等写操作，如果服务器接口没做幂等性，会产生不好的结果，所以OkToRetryOnAllOperations慎用
ribbon.OkToRetryOnAllOperations=false

# 重试开关，默认true
# spring.cloud.loadbalancer.retry.enabled=true



# 使用Feign调用接口分两层，ribbon的调用和hystrix的调用，
# 所以ribbon的超时时间和Hystrix的超时时间的结合就是Feign的超时时间
feign.hystrix.enabled=true
hystrix.command.default.execution.timeout.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=15000

# 一般情况下 都是 ribbon 的超时时间 < hystrix的超时时间（因为涉及到ribbon的重试机制）
# ribbon超时时间
ribbon.ReadTimeout=5000
ribbon.ConnectTimeout=5000